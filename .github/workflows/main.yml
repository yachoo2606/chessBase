on:
  push:
    paths:
      - 'backend/chessBase/**'
      - 'frontend/**'

name: Linux_Container_Workflow

jobs:
  build-and-deploy-backend:
    if: contains(github.event.head_commit.message, 'backend/chessBase')
    runs-on: ubuntu-latest
    steps:
      # checkout the repo
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
      
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: 'Build and push backend image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build ./backend/chessBase -f ./backend/chessBase/Dockerfile -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/backend-sampleapp:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/backend-sampleapp:${{ github.sha }}

      - name: 'Deploy backend to Azure Container Instances'
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: backend-${{ secrets.RESOURCE_GROUP }}-${{ github.run_number }}
          image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/backend-sampleapp:${{ github.sha }}
          registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          name: aci-backend-sampleapp
          location: 'west us'

  build-and-deploy-frontend:
    if: contains(github.event.head_commit.message, 'frontend')
    runs-on: ubuntu-latest
    steps:
      # checkout the repo
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
      
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: 'Build and push frontend image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build ./frontend -f ./frontend/Dockerfile -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend-sampleapp:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend-sampleapp:${{ github.sha }}

      - name: 'Deploy frontend to Azure Container Instances'
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: frontend-${{ secrets.RESOURCE_GROUP }}-${{ github.run_number }}
          image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend-sampleapp:${{ github.sha }}
          registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          name: aci-frontend-sampleapp
          location: 'west us'
